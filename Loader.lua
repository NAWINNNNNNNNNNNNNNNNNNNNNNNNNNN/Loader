-- Xenon Hub - Join us discord.gg/xenonhub
return(function(dt,ct,Tt,rt,Dt,Pt,qt,aL,Ot,Rt,bt,Qt,vt,tt,Ut,wt,Zt,pL,St,et,eL,jt,nt,kt,Ct,It,Jt,ut,ht,st,gL,Lt,at,Yt,Vt,Gt,XL,yt,Xt,ft,xL,pt,Mt,zL,At,iL,Ht,ot,Ft,mt,Et,lt,BL,Nt,KL,Wt,...)local Z,L=at,pt[et];local g,i,K=Xt,Zt,(Lt);local b,W,T,I=Ut,ft,lt,(bt or Wt);local U,f,l=pt[Tt],It[dt],(Pt);local x,a,p,e,X=Mt,Vt,pt[nt],ot,pt[jt];local B=(Ft);local P,xt=Ot,(0);local D,M=rt,rt;while xt<3 do if not(xt<=0)then if xt~=1 then M={};do xt=3;end;else do xt=2;end;end;else D=(P and P()or Qt);xt=1;end;end;xt=8;local V,o,j,F,O,A,r,Q,c,H,J,Y,h,S,w,R=rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt,rt;while xt<18 do if not(xt<=8)then if xt<=12 then if not(xt<=10)then if xt~=11 then h=function(HY,DY,fY)local xY=(1);local rY=((HY/Y[DY])%Y[fY]);repeat if xY~=0 then rY=rY-rY%1;xY=0;else return rY;end;until(ht);end;xt=17;else F=Yt;xt=5;end;else do if xt~=9 then do local Y0,g0=1,rt;while Y0<2 do if Y0~=0 then g0=2;Y0=0;else do for KJ=1,31 do(Y)[KJ]=g0;do g0=g0*2;end;end;end;Y0=2;end;end;end;xt=12;else do A=function()local fv,rv=0,rt;while(Jt)do if fv<=0 then rv=e(F,V,V);fv=2;else if fv~=1 then do V=V+1;end;fv=1;else return rv;end;end;end;end;end;xt=13;end;end;end;else if not(xt<=14)then do if not(xt<=15)then if xt~=16 then do S=function()local iK,jK=r(),(r());if not(jK>=Q)then else jK=jK-c;end;do return jK*c+iK;end;end;end;xt=4;else c=St;xt=6;end;else Y={[0]=1};do xt=10;end;end;end;else if xt~=13 then Q=2147483648;do xt=16;end;else r=function()local rg,tg,og,Rg=e(F,V,V+3);for w3=0,1 do if w3~=0 then return Rg*16777216+og*65536+tg*256+rg;else V=V+4;end;end;end;xt=14;end;end;end;else if not(xt<=3)then if not(xt<=5)then do if xt<=6 then H=2^52;xt=0;else if xt==7 then xt=11;else do V=1;end;xt=2;end;end;end;else if xt~=4 then do xt=3;end;else w=function()local lm=(4);local Um,Km,Qm,ym,um=rt,rt,rt,rt,rt;while(Jt)do if not(lm<=2)then if not(lm<=3)then if lm~=4 then if not(Um==0 and Km==0)then else do return 0;end;end;lm=3;else Um=r();lm=0;end;else Qm=(-1)^h(Km,31,1);lm=2;end;else do if not(lm<=0)then if lm~=1 then ym=h(Km,20,11);lm=1;else um=h(Km,0,20)*c+Um;do break;end;end;else Km=r();lm=5;end;end;end;end;lm=0;local Dm=(rt);while(Jt)do if not(lm<=0)then if lm~=1 then if ym==0 then if um~=0 then ym=1;Dm=0;else return Qm*0;end;elseif ym~=2047 then else if um~=0 then return Qm*(1/0);else return Qm*(0/0);end;end;lm=1;else return Qm*(2^(ym-1023))*(um/H+Dm);end;else Dm=1;lm=2;end;end;end;xt=1;end;end;else do if not(xt<=1)then if xt~=2 then do F=L(p(F,5),ct,function(qH)if e(qH,2)~=72 then local Na=(X(K(qH,16)));if not(O)then return Na;else local SZ=(rt);for kf=0,2 do if not(kf<=0)then if kf~=1 then do return SZ;end;else do O=rt;end;end;else SZ=Z(Na,O);end;end;end;else do O=K(p(qH,1,1));end;return Ht;end;end);end;xt=9;else xt=7;end;else if xt==0 then J=c-1;xt=15;else do R={[0]={[0]=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},{[0]=1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14},{[0]=2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13},{[0]=3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12},{[0]=4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11},{[0]=5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10},{[0]=6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9},{[0]=7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8},{[0]=8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7},{[0]=9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6},{[0]=10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5},{[0]=11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4},{[0]=12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3},{[0]=13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2},{[0]=14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1},{[0]=15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0}};end;do xt=18;end;end;end;end;end;end;end;local k=((wt or Rt));local m=(k and k[kt]or function(cc,Hc)local Mc=1;local nc,Pc=rt,rt;while(Jt)do if Mc<=2 then if not(Mc<=0)then if Mc~=1 then do Hc=Hc%c;end;Mc=4;else cc=cc%c;do Mc=2;end;end;else while cc>0 and Hc>0 do local vw,tw=rt,(rt);do for oU=0,4 do if not(oU<=1)then if not(oU<=2)then if oU~=3 then Hc=(Hc-tw)/16;else cc=(cc-vw)/16;end;else Pc=Pc+R[vw][tw]*nc;end;else do if oU~=0 then tw=Hc%16;else vw=cc%16;end;end;end;end;end;do nc=nc*16;end;end;Mc=5;end;else if not(Mc<=3)then if Mc==4 then nc=1;Mc=3;else return Pc+cc*nc+Hc*nc;end;else Pc=0;Mc=0;end;end;end;end);local q=k and k[mt]or function(Wv,Sv)local jv=2;do while(Jt)do if not(jv<=0)then do if jv~=1 then do Wv=Wv%c;end;do jv=1;end;else Sv=Sv%c;jv=0;end;end;else return((Wv+Sv)-m(Wv,Sv))/2;end;end;end;end;local s=k and k[qt]or function(Oo,To)Oo=Oo%c;To=To%c;do return J-q(J-Oo,J-To);end;end;local u,v,E=rt,rt,rt;local G=(k and k[st]or function(rc)return J-(rc%c);end);local y,N=k and k[Gt],k and k[yt];do for ML=0,7 do if ML<=3 then if ML<=1 then if ML==0 then do y=y or function(zT,GT)if GT>=32 then return 0;end;do if GT<0 then return N(zT,-GT);end;end;do return(zT*Y[GT])%c;end;end;end;else do N=N or function(TT,lT)do if not(lT>=32)then else return 0;end;end;do if not(lT<0)then else return y(TT,-lT);end;end;local gT=(rt);for K0=0,1 do if K0~=0 then return gT-gT%1;else gT=(TT%c/Y[lT]);end;end;end;end;end;else if ML~=2 then do v=function(nK)local AK=(r());local hK=(rt);local rK=(3);repeat if not(rK<=1)then if rK~=2 then hK=Ht;rK=1;else V=V+AK;do rK=0;end;end;else do if rK~=0 then for CN=1,AK,7997 do local gN,vN,aN=4,rt,rt;while gN<5 do if gN<=1 then do if gN==0 then do hK=hK..X(I(aN));end;gN=5;else if not(vN>AK)then else vN=AK;end;do gN=2;end;end;end;else do if gN<=2 then aN={e(F,V+CN-1,V+vN-1)};do gN=3;end;else if gN==3 then for Aj=1,#aN do local Bj=0;do repeat if Bj~=0 then do o=(nK*o+241)%256;end;Bj=2;else aN[Aj]=m(aN[Aj],o);Bj=1;end;until Bj>1;end;end;gN=0;else vN=CN+7997-1;gN=1;end;end;end;end;end;end;do rK=2;end;else do return hK;end;end;end;end;until(ht);end;end;else do u=function(Pm)local wm,Bm,Mm,nm,fm=rt,rt,rt,rt,(rt);for Vf=0,7 do if not(Vf<=3)then if not(Vf<=5)then if Vf~=6 then return fm*16777216+nm*65536+Mm*256+Bm;else V=V+4;end;else if Vf~=4 then j=(213*j+Pm)%256;else fm=m(wm[4],j);end;end;else if not(Vf<=1)then if Vf==2 then Mm=m(wm[2],j);else nm=m(wm[3],j);end;else if Vf~=0 then Bm=m(wm[1],j);else do wm={e(F,V,V+3)};end;end;end;end;end;end;end;end;end;else if ML<=5 then if ML~=4 then j=A();else do o=A();end;end;else if ML~=6 then for sg=1,A()do local Eg,Yg=1,(rt);while Eg<3 do if Eg<=0 then(E)[sg-1]=Yg;Eg=2;else if Eg~=1 then do for mL=1,A()do local LL=0;local wL,GL=rt,(rt);repeat if not(LL<=1)then do if LL~=2 then do Yg[GL+1]=h(wL,4,4);end;LL=4;else do Yg[GL]=h(wL,0,4);end;LL=3;end;end;else do if LL==0 then wL=A();LL=1;else GL=(mL-1)*2;LL=2;end;end;end;until LL>3;end;end;Eg=3;else Yg={};do Eg=0;end;end;end;end;end;else E={};end;end;end;end;end;local t=function(...)return i(Nt,...),{...};end;local gt,it,Kt,zt,Bt=rt,rt,rt,rt,rt;local C={};for KN=0,7 do if not(KN<=3)then if not(KN<=5)then if KN~=6 then C=rt;else(it)[3]=C;end;else if KN~=4 then Bt=zt();else function zt()local X3,n3,V3=0,rt,(rt);local g3=({});local x3={{},{},rt,rt,rt,{},rt,rt,rt};while X3<4 do do if not(X3<=1)then do if X3~=2 then(x3)[18]=A();X3=4;else V3=1;X3=1;end;end;else do if X3~=0 then x3[8]=A();do X3=3;end;else n3={};X3=2;end;end;end;end;end;do X3=8;end;local P3,S3,T3=rt,rt,rt;repeat if not(X3<=4)then if X3<=6 then if X3~=5 then for Wu=1,T3 do local qu,eu,ou,Xu=2,rt,rt,(rt);repeat if not(qu<=0)then if qu~=1 then eu=r();qu=0;else Xu=r();do break;end;end;else do ou=r();end;qu=1;end;until(ht);for ih=eu,ou do(x3[1])[ih]=Xu;end;end;X3=10;else for DX=1,S3 do(x3[6])[DX-1]=zt();end;X3=9;end;else if not(X3<=7)then if X3~=8 then do(x3)[5]=A();end;do X3=7;end;else do P3=A();end;X3=1;end;else do T3=r();end;X3=6;end;end;else do if not(X3<=1)then if not(X3<=2)then if X3~=3 then(x3)[15]=A();X3=3;else(x3)[14]=A();X3=0;end;else(x3)[7]=h(P3,2,1)~=0;do X3=4;end;end;else if X3~=0 then x3[4]=h(P3,1,1)~=0;X3=2;else S3=r();X3=5;end;end;end;end;until X3>=10;local q3=(r()-133702);local v3=rt;do for HU=0,1 do if HU~=0 then for cU=1,q3 do local ZU={rt,rt,rt,rt,rt,rt,rt,rt,rt,rt};local rU=u(v3);local yU=(8);while yU~=11 do do if not(yU<=4)then if not(yU<=7)then if not(yU<=8)then if yU~=9 then do ZU[10]=h(rU,14,9);end;yU=7;else ZU[19]=h(rU,5,9);yU=6;end;else do(ZU)[14]=h(rU,25,4);end;yU=0;end;else if yU<=5 then ZU[4]=h(rU,14,18);yU=11;else if yU==6 then ZU[20]=h(rU,9,13);yU=4;else(ZU)[20]=h(rU,9,13);yU=3;end;end;end;else if not(yU<=1)then if yU<=2 then do ZU[10]=h(rU,14,9);end;yU=5;else do if yU==3 then do ZU[20]=h(rU,9,13);end;yU=11;else do(ZU)[5]=h(rU,23,9);end;do yU=1;end;end;end;end;else if yU==0 then ZU[1]=A();do yU=9;end;else ZU[3]=h(rU,6,8);yU=2;end;end;end;end;end;(x3[2])[cU]=ZU;end;else v3=A();end;end;end;(x3)[3]=A();local w3=(r()-XL);X3=1;local s3,I3=rt,rt;do while X3<2 do if X3~=0 then s3=A();X3=0;else I3=A()~=0;X3=2;end;end;end;do for OH=1,w3 do local JH,rH,PH=0,rt,(rt);while JH~=2 do if JH~=0 then PH=A();do JH=2;end;else JH=1;end;end;JH=0;while JH<=0 do if PH==49 then rH=w();elseif PH==104 then rH=p(v(s3),r());elseif PH==202 then rH=S();elseif PH==29 then rH=ht;elseif PH==216 then rH=w();elseif PH==27 then rH=r();elseif PH==133 then rH=w()+r();elseif PH==54 then do rH=Jt;end;elseif PH==147 then do rH=p(v(s3),A());end;elseif PH~=87 then else rH=p(v(s3),4);end;JH=1;end;g3[OH-1]=V3;local HH=({rH,{}});do n3[V3]=HH;end;JH=1;while JH<=1 do if JH~=0 then V3=V3+1;JH=0;else if not(I3)then else local gm=1;do while(Jt)do if gm~=0 then C[gt]=HH;do gm=0;end;else gt=gt+1;break;end;end;end;end;JH=2;end;end;end;end;local k3=(E[x3[8]]);X3=1;while X3<=2 do if not(X3<=0)then do if X3~=1 then x3[18]=r();X3=0;else do for D2=1,q3 do local N2=(x3[2][D2]);local B2=3;local j2,E2=rt,rt;do while(Jt)do if not(B2<=2)then if not(B2<=3)then if B2~=4 then E2=j2==13;do B2=2;end;else if j2~=8 then else local KV,FV,hV=0,rt,rt;do while(Jt)do if not(KV<=0)then if KV~=1 then hV=n3[FV];KV=1;else if hV then local Rw,sw=0,rt;while Rw<=1 do if Rw~=0 then do sw=hV[2];end;Rw=2;else(N2)[6]=hV[1];do Rw=1;end;end;end;sw[#sw+1]={N2,6};end;break;end;else FV=g3[N2[4]];do KV=2;end;end;end;end;end;B2=0;end;else j2=k3[N2[1]];do B2=5;end;end;else do if not(B2<=0)then if B2~=1 then if not((j2==6 or E2)and N2[5]>255)then else local FL,NL,TL=0,rt,(rt);do repeat if FL<=1 then do if FL==0 then do N2[2]=Jt;end;FL=1;else NL=g3[N2[5]-256];FL=3;end;end;else if FL~=2 then TL=n3[NL];FL=2;else if not(TL)then else local JH=(rt);local hH=(0);do while hH<=1 do if hH~=0 then JH=TL[2];hH=2;else N2[9]=TL[1];do hH=1;end;end;end;end;(JH)[#JH+1]={N2,9};end;FL=4;end;end;until FL>=4;end;end;B2=1;else do if j2~=7 then else do N2[4]=D2+(N2[4]-131071)+1;end;end;end;B2=4;end;else if(j2==3 or E2)and N2[10]>255 then do(N2)[8]=Jt;end;local G2,u2,U2=0,rt,(rt);do while G2~=3 do do if G2<=0 then do u2=g3[N2[10]-256];end;G2=1;else do if G2~=1 then do if not(U2)then else local qO=rt;local RO=2;repeat if RO<=0 then do qO=U2[2];end;RO=1;else if RO~=1 then do(N2)[7]=U2[1];end;RO=0;else do(qO)[#qO+1]={N2,7};end;RO=3;end;end;until RO>2;end;end;G2=3;else U2=n3[u2];G2=2;end;end;end;end;end;end;end;break;end;end;end;end;end;end;end;X3=2;end;end;else do x3[9]=A();end;X3=3;end;end;(x3)[15]=r();do for IL=0,1 do if IL~=0 then return x3;else x3[15]=r();end;end;end;end;end;end;else if not(KN<=1)then do if KN~=2 then function Kt(U2,k2,W2)local g2=W2[6];local P2,C2=W2[7],W2[8];local w2,K2,I2=W2[9],W2[1],W2[4];local E2=W2[2];local p2=W2[5];local S2=l({},{__mode=ut});local Y2=rt;Y2=function(...)local XI,mI,BI=0,1,{};local uI=(P and P()or Qt);local YI=((uI==D and U2 or uI));local dI,PI=t(...);dI=dI-1;for vs=0,dI do do if not(p2>vs)then break;else BI[vs]=PI[vs+1];end;end;end;it[1]=W2;(it)[2]=BI;do if not I2 then PI=rt;elseif not(P2)then else do(BI)[p2]={n=dI>=p2 and dI-p2+1 or 0,I(PI,p2+1,dI+1)};end;end;end;if YI==uI then else if not(At)then Qt=YI;else At(Y2,YI);end;end;local eI,WI,iI,pI=Dt(function()while true do local QP=E2[mI];local rP=(QP[1]);mI=mI+1;if rP>=66 then if not(rP>=99)then if rP<82 then if not(rP<74)then if rP>=78 then if not(rP>=80)then if rP~=79 then BI[QP[3]]=BI[QP[10]]*QP[9];else local mN=(BI[QP[10]]);local eN=QP[3];local dN=BI[QP[5]];(BI)[eN+1]=mN;(BI)[eN]=mN[dN];end;else do if rP~=81 then BI[QP[3]]=#BI[QP[10]];else do BI[QP[3]]=BI[QP[10]]^BI[QP[5]];end;end;end;end;else if rP>=76 then if rP~=77 then BI[QP[3]]=not BI[QP[10]];else local QB=(QP[3]);local iB=(QB+2);local hB=(QB+1);BI[QB]=g(K(BI[QB]),gL);do BI[hB]=g(K(BI[hB]),iL);end;BI[iB]=g(K(BI[iB]),KL);BI[QB]=BI[QB]-BI[iB];mI=QP[4];end;else if rP==75 then BI[QP[3]]=QP[7]*BI[QP[5]];else if QP[5]==100 then do mI=mI-1;end;(E2)[mI]={[10]=(QP[10]-99)%256,[3]=(QP[3]-99)%256,[1]=50};elseif QP[5]~=207 then for OY=QP[3],QP[10]do BI[OY]=rt;end;else do mI=mI-1;end;E2[mI]={[5]=(QP[10]-2)%256,[3]=(QP[3]-2)%256,[1]=43};end;end;end;end;else if not(rP>=70)then if not(rP<68)then if rP~=69 then do if BI[QP[10]]==QP[9]then else do mI=mI+1;end;end;end;else if BI[QP[10]]~=QP[9]then else mI=mI+1;end;end;else if rP~=67 then local AH=(QP[3]);local IH,bH=AH+2,AH+3;local XH=({BI[AH](BI[AH+1],BI[IH])});for wk=1,QP[5]do(BI)[IH+wk]=XH[wk];end;local ZH=(BI[bH]);if ZH==rt then mI=mI+1;else(BI)[IH]=ZH;end;else(BI[QP[3]])[QP[7]]=BI[QP[5]];end;end;else if rP<72 then do if rP==71 then do if BI[QP[10]]~=BI[QP[5]]then else mI=mI+1;end;end;else BI[QP[3]]=QP[7]-BI[QP[5]];end;end;else do if rP~=73 then do if QP[5]==214 then do mI=mI-1;end;E2[mI]={[3]=(QP[3]-42)%Ct,[5]=(QP[10]-42)%256,[1]=127};else repeat local YW,aW,SW=S2,BI,(QP[3]);if not(#YW>0)then else local QW=({});do for fE,kE in T,YW do for t7,D7 in T,kE do do if not(D7[1]==aW and D7[2]>=SW)then else local AK=(D7[2]);if not(not QW[AK])then else(QW)[AK]={aW[AK]};end;D7[1]=QW[AK];(D7)[2]=1;end;end;end;end;end;end;until Jt;end;end;else(BI)[QP[3]]=BI[QP[10]]>=BI[QP[5]];end;end;end;end;end;else if not(rP<90)then if not(rP<94)then do if not(rP>=96)then if rP==95 then(BI)[QP[3]]=N(BI[QP[10]],BI[QP[5]]);else BI[QP[3]]=it[QP[10]];end;else if not(rP<97)then if rP==98 then BI[QP[3]]=-BI[QP[10]];else(BI)[QP[3]]=QP[7]^BI[QP[5]];end;else(BI)[QP[3]]=BI[QP[10]]==QP[9];end;end;end;else do if not(rP<92)then if rP==93 then do BI[QP[3]]=q(QP[7],QP[9]);end;else BI[QP[3]]=QP[7]-QP[9];end;else do if rP==91 then local fy=k2[QP[10]];BI[QP[3]]=fy[1][fy[2]];else do BI[QP[3]]=BI[QP[10]]~=BI[QP[5]];end;end;end;end;end;end;else if not(rP<86)then do if not(rP<88)then if rP~=89 then BI[QP[3]]=Jt;mI=mI+1;else do(BI)[QP[3]]=BI[QP[10]]/QP[9];end;end;else do if rP==87 then if not(not(BI[QP[10]]<=QP[9]))then else do mI=mI+1;end;end;else BI[QP[3]]=q(BI[QP[10]],QP[9]);end;end;end;end;else if not(rP<84)then if rP~=85 then do repeat local B2,u2=S2,(BI);if not(#B2>0)then else local JL={};for hT,fT in T,B2 do for Nm,Em in T,fT do if not(Em[1]==u2 and Em[2]>=0)then else local yj=(Em[2]);if not(not JL[yj])then else do JL[yj]={u2[yj]};end;end;do Em[1]=JL[yj];end;do(Em)[2]=1;end;end;end;end;end;until Jt;end;return Jt,QP[3],0;else if QP[5]~=227 then do BI[QP[3]]=BI[QP[10]];end;else mI=mI-1;do E2[mI]={[10]=(QP[10]-103)%256,[3]=(QP[3]-103)%256,[1]=98};end;end;end;else if rP==83 then(BI)[QP[3]]=QP[7]/QP[9];else local o_=(QP[3]);local g_=(BI[o_+2]);local q_=(BI[o_]+g_);(BI)[o_]=q_;if not(g_>0)then if not(q_>=BI[o_+1])then else do mI=QP[4];end;BI[o_+3]=q_;end;else if q_<=BI[o_+1]then do mI=QP[4];end;do(BI)[o_+3]=q_;end;end;end;end;end;end;end;end;else if rP<115 then if rP>=107 then if not(rP>=111)then if not(rP<109)then if rP~=110 then local g8=BI[QP[10]]/BI[QP[5]];do BI[QP[3]]=g8-g8%1;end;else if not(BI[QP[10]]<=QP[9])then else mI=mI+1;end;end;else if rP==108 then do BI[QP[3]]=BI[QP[10]]==BI[QP[5]];end;else do(BI)[QP[3]]=BI[QP[10]]%QP[9];end;end;end;else if not(rP>=vt)then if rP==112 then if not(not(QP[7]<QP[9]))then else mI=mI+1;end;else(BI)[QP[3]]=m(BI[QP[10]],QP[9]);end;else if rP~=114 then do(BI)[QP[3]]=BI[QP[10]]^QP[9];end;else do repeat local qj,Oj=S2,(BI);if#qj>0 then local ID=({});do for TD,JD in T,qj do for O2,Q2 in T,JD do if not(Q2[1]==Oj and Q2[2]>=0)then else local N2=(Q2[2]);if not(not ID[N2])then else do(ID)[N2]={Oj[N2]};end;end;Q2[1]=ID[N2];(Q2)[2]=1;end;end;end;end;end;until Jt;end;return;end;end;end;else if not(rP<103)then if not(rP>=105)then if rP~=104 then do(BI)[QP[3]]=m(BI[QP[10]],BI[QP[5]]);end;else do(BI)[QP[3]]=QP[6];end;end;else do if rP==106 then do(BI[QP[3]])[BI[QP[10]]]=BI[QP[5]];end;else local C9=QP[10];local k9=(QP[3]);do XI=k9+C9-1;end;repeat local Pa,Ra=S2,BI;do if not(#Pa>0)then else local go=({});for mY,bY in T,Pa do for R7,M7 in T,bY do if not(M7[1]==Ra and M7[2]>=0)then else local T3=(M7[2]);if not go[T3]then go[T3]={Ra[T3]};end;M7[1]=go[T3];do M7[2]=1;end;end;end;end;end;end;until Jt;do return Jt,k9,C9;end;end;end;end;else if not(rP<101)then if rP~=Et then do(BI)[QP[3]]=QP[7]/BI[QP[5]];end;else(BI)[QP[3]]=q(QP[7],BI[QP[5]]);end;else if rP==100 then XI=QP[3];(BI)[XI]=BI[XI]();else(BI)[QP[3]]=QP[7]>=BI[QP[5]];end;end;end;end;else if not(rP>=123)then do if not(rP<119)then if not(rP<121)then if rP==122 then BI[QP[3]]=s(BI[QP[10]],QP[9]);else it[QP[10]]=BI[QP[3]];end;else if rP~=120 then BI[QP[3]]=BI[QP[10]]<QP[9];else local Rm=QP[3];(BI)[Rm]=BI[Rm](BI[Rm+1],BI[Rm+2]);XI=Rm;end;end;else if not(rP<117)then if rP~=118 then(BI)[QP[3]]=s(QP[7],QP[9]);else BI[QP[3]]=N(QP[7],QP[9]);end;else if rP==tt then BI[QP[3]]=QP[7]==QP[9];else local Tb=(QP[3]);(BI[Tb])(BI[Tb+1],BI[Tb+2]);XI=Tb-1;end;end;end;end;else if rP<127 then if not(rP>=125)then if rP==124 then BI[QP[3]]=BI[QP[10]][QP[9]];else local Qa=(QP[10]);local Ba=QP[3];local qa=(QP[5]);if Qa==0 then else XI=Ba+Qa-1;end;local ea,Ia=rt,rt;do if Qa==1 then ea,Ia=t(BI[Ba]());else ea,Ia=t(BI[Ba](I(BI,Ba+1,XI)));end;end;if qa~=1 then do if qa==0 then ea=ea+Ba-1;XI=ea;else ea=Ba+qa-2;do XI=ea+1;end;end;end;local MT=0;for LF=Ba,ea do MT=MT+1;(BI)[LF]=Ia[MT];end;else XI=Ba-1;end;end;else if rP==126 then if not(not(BI[QP[10]]<QP[9]))then else mI=mI+1;end;else if QP[5]~=70 then local XX,BX=QP[3],(dI-p2);if not(BX<0)then else BX=-1;end;for r3=XX,XX+BX do do BI[r3]=PI[p2+(r3-XX)+1];end;end;XI=XX+BX;else mI=mI-1;do E2[mI]={[3]=(QP[3]-242)%256,[10]=(QP[10]-242)%256,[1]=80};end;end;end;end;else if not(rP>=129)then if rP==128 then local mH=(QP[3]);XI=mH+QP[10]-1;do(BI)[mH]=BI[mH](I(BI,mH+1,XI));end;XI=mH;else if not(not BI[QP[3]])then else mI=mI+1;end;end;else if not(rP<130)then if rP~=131 then BI[QP[3]]=BI[QP[10]]<=QP[9];else local iq,tq=g2[QP[4]],rt;local kq=(iq[3]);if kq>0 then tq={};for ea=0,kq-1 do local Va=(E2[mI]);local ha=Va[1];if ha==85 then(tq)[ea]={BI,Va[10]};else tq[ea]=k2[Va[10]];end;mI=mI+1;end;f(S2,tq);end;do BI[QP[3]]=Kt(YI,tq,iq);end;end;else BI[QP[3]]=m(QP[7],BI[QP[5]]);end;end;end;end;end;end;else if not(rP<33)then if not(rP>=49)then if rP<41 then if not(rP>=37)then if not(rP<35)then do if rP==36 then BI[QP[3]]=BI[QP[10]]+QP[9];else(BI)[QP[3]]=s(BI[QP[10]],BI[QP[5]]);end;end;else if rP==34 then BI[QP[3]]=BI[QP[10]]>BI[QP[5]];else if not(BI[QP[10]]<BI[QP[5]])then else mI=mI+1;end;end;end;else if not(rP<39)then if rP~=40 then(BI)[QP[3]]=Jt;else if not(not(BI[QP[10]]<BI[QP[5]]))then else mI=mI+1;end;end;else if rP~=38 then(BI)[QP[3]]=QP[7]>BI[QP[5]];else repeat local UJ,bJ=S2,BI;if not(#UJ>0)then else local Hs=({});do for hx,vx in T,UJ do do for d6,R6 in T,vx do do if R6[1]==bJ and R6[2]>=0 then local nv=(R6[2]);if not(not Hs[nv])then else Hs[nv]={bJ[nv]};end;do R6[1]=Hs[nv];end;R6[2]=1;end;end;end;end;end;end;end;until Jt;local xl=(QP[3]);do return ht,xl,xl+QP[10]-2;end;end;end;end;else do if rP<45 then if not(rP>=43)then if rP~=42 then BI[QP[3]]=BI[QP[10]]*BI[QP[5]];else if not(not(QP[7]<BI[QP[5]]))then else do mI=mI+1;end;end;end;else if rP~=44 then if QP[10]==74 then do mI=mI-1;end;(E2)[mI]={[10]=(QP[5]-54)%256,[1]=85,[3]=(QP[3]-54)%256};elseif QP[10]==49 then mI=mI-1;E2[mI]={[3]=(QP[3]-166)%256,[1]=127,[5]=(QP[5]-166)%256};else if not(BI[QP[3]])then else mI=mI+1;end;end;else BI[QP[3]]=N(QP[7],BI[QP[5]]);end;end;else if rP<47 then if rP==46 then local IG=QP[3];(BI)[IG]=BI[IG](I(BI,IG+1,XI));do XI=IG;end;else(BI)[QP[3]]=q(BI[QP[10]],BI[QP[5]]);end;else if rP~=48 then local EP=(QP[10]);(BI)[QP[3]]=BI[EP]..BI[EP+1];else local jd=(QP[3]);(BI[jd])(I(BI,jd+1,XI));do XI=jd-1;end;end;end;end;end;end;else if not(rP>=57)then do if rP>=53 then do if rP>=55 then if rP~=56 then(BI)[QP[3]]=BI[QP[10]]%BI[QP[5]];else do BI[QP[3]][QP[7]]=QP[9];end;end;else if rP==54 then repeat local tq,Vq=S2,(BI);if#tq>0 then local CZ=({});do for j6,A6 in T,tq do for BY,iY in T,A6 do if iY[1]==Vq and iY[2]>=0 then local fQ=(iY[2]);do if not CZ[fQ]then do(CZ)[fQ]={Vq[fQ]};end;end;end;do(iY)[1]=CZ[fQ];end;iY[2]=1;end;end;end;end;end;until Jt;return Jt,QP[3],1;else do BI[QP[3]]=BI[QP[10]]+BI[QP[5]];end;end;end;end;else if not(rP<51)then do if rP~=52 then BI[QP[3]]={};else(BI)[QP[3]]=QP[6];end;end;else if rP==50 then if QP[5]~=103 then do repeat local Ak,hk=S2,BI;if not(#Ak>0)then else local SJ=({});for TD,UD in T,Ak do for H2,i2 in T,UD do if not(i2[1]==hk and i2[2]>=0)then else local fP=i2[2];if not SJ[fP]then(SJ)[fP]={hk[fP]};end;(i2)[1]=SJ[fP];i2[2]=1;end;end;end;end;until Jt;end;return ht,QP[3],XI;else mI=mI-1;E2[mI]={[10]=(QP[10]-249)%Ct,[1]=114,[3]=(QP[3]-249)%256};end;else(YI)[QP[6]]=BI[QP[3]];end;end;end;end;else if rP<61 then do if not(rP>=59)then if rP~=58 then local ED=(QP[3]);(BI)[ED]=BI[ED](BI[ED+1]);do XI=ED;end;else do repeat local uv,Dv=S2,(BI);do if not(#uv>0)then else local tf=({});do for km,lm in T,uv do for V3,S3 in T,lm do if not(S3[1]==Dv and S3[2]>=0)then else local Fc=(S3[2]);do if not(not tf[Fc])then else do tf[Fc]={Dv[Fc]};end;end;end;do S3[1]=tf[Fc];end;S3[2]=1;end;end;end;end;end;end;until Jt;end;local ZT=QP[3];return ht,ZT,ZT;end;else if rP==60 then(BI)[QP[3]]=BI[QP[10]]>=QP[9];else(BI)[QP[3]]=YI[QP[6]];end;end;end;else if rP>=63 then if not(rP>=64)then(BI)[QP[3]]=y(QP[7],QP[9]);else if rP~=65 then local Ip=((QP[5]-1)*50);local gp=QP[3];for G7=1,XI-gp do BI[gp][Ip+G7]=BI[gp+G7];end;else(BI)[QP[3]]=s(QP[7],BI[QP[5]]);end;end;else if rP==62 then local yW=(BI[QP[10]]/QP[9]);BI[QP[3]]=yW-yW%1;else do if QP[5]~=142 then BI[QP[3]]=rt;else mI=mI-1;do E2[mI]={[3]=(QP[3]-101)%256,[1]=114,[10]=(QP[10]-101)%Ct};end;end;end;end;end;end;end;end;else if not(rP>=16)then if not(rP>=8)then if not(rP>=4)then if not(rP<2)then do if rP~=3 then do BI[QP[3]]=QP[7]>QP[9];end;else local Wm=(BI[QP[10]]);local gm=QP[3];do BI[gm+1]=Wm;end;(BI)[gm]=Wm[QP[9]];end;end;else do if rP~=1 then local BG=QP[7]/QP[9];do(BI)[QP[3]]=BG-BG%1;end;else XI=QP[3];(BI[XI])();XI=XI-1;end;end;end;else if not(rP>=6)then if rP==5 then local Xv=QP[3];XI=Xv+QP[10]-1;(BI[Xv])(I(BI,Xv+1,XI));XI=Xv-1;else(BI)[QP[3]]=BI[QP[10]]/BI[QP[5]];end;else if rP==7 then BI[QP[3]]=QP[7]^QP[9];else local w0=(BI[QP[10]]);do if not(not w0)then BI[QP[3]]=w0;else mI=mI+1;end;end;end;end;end;else if rP<12 then if not(rP>=10)then if rP==9 then do if not(not(BI[QP[10]]<=BI[QP[5]]))then else mI=mI+1;end;end;else local Rl,kl=QP[3],(QP[5]-1)*50;for kS=1,QP[10]do BI[Rl][kl+kS]=BI[Rl+kS];end;end;else do if rP~=11 then do(BI[QP[3]])[BI[QP[10]]]=QP[9];end;else BI[QP[3]]=QP[7]%QP[9];end;end;end;else if rP<14 then if rP==13 then if not(not(QP[7]<=BI[QP[5]]))then else mI=mI+1;end;else(BI)[QP[3]]=BI[QP[10]]-BI[QP[5]];end;else if rP~=15 then local NX=QP[7]/BI[QP[5]];(BI)[QP[3]]=NX-NX%1;else local O4=(QP[10]);local a4=BI[O4];for vH=O4+1,QP[5]do do a4=a4..BI[vH];end;end;(BI)[QP[3]]=a4;end;end;end;end;else if not(rP<24)then if not(rP>=28)then if not(rP<26)then if rP~=27 then mI=QP[4];else do BI[QP[3]]={I({},1,QP[10])};end;end;else if rP~=25 then BI[QP[3]]=BI[QP[10]][BI[QP[5]]];else local A3=QP[3];BI[A3](BI[A3+1]);do XI=A3-1;end;end;end;else if not(rP<30)then if not(rP>=31)then(BI)[QP[3]]=QP[7]+BI[QP[5]];else do if rP~=32 then if BI[QP[10]]==BI[QP[5]]then else mI=mI+1;end;else(BI)[QP[3]]=m(QP[7],QP[9]);end;end;end;else do if rP~=29 then if QP[7]~=BI[QP[5]]then do mI=mI+1;end;end;else do if QP[5]~=19 then local ta=QP[3];do for NS=ta,ta+(QP[10]-1)do do BI[NS]=PI[p2+(NS-ta)+1];end;end;end;else mI=mI-1;E2[mI]={[1]=85,[10]=(QP[10]-166)%256,[3]=(QP[3]-166)%256};end;end;end;end;end;end;else if not(rP<20)then if not(rP>=22)then if rP~=21 then BI[QP[3]]=QP[7]<=BI[QP[5]];else(BI)[QP[3]]=BI[QP[10]]<BI[QP[5]];end;else if rP~=23 then do(BI)[QP[3]]=BI[QP[10]]~=QP[9];end;else(BI)[QP[3]]=BI[QP[10]]<=BI[QP[5]];end;end;else if not(rP>=18)then do if rP==17 then do BI[QP[3]]=G(BI[QP[10]]);end;else local Dw=k2[QP[10]];do Dw[1][Dw[2]]=BI[QP[3]];end;end;end;else if rP~=19 then(BI)[QP[3]]=ht;else BI[QP[3]]=QP[7]==BI[QP[5]];end;end;end;end;end;end;end;end;end);do if not(eI)then if B(WI)~=zL then(a)(WI,0);else if not(U(WI,BL))then else do return xL();end;end;if not(U(WI,aL))then(a)(WI,0);else(a)(pL..(K2[mI-1]or eL)..": "..x(WI),0);end;end;else if WI then if pI==1 then return BI[iI]();else return BI[iI](I(BI,iI+1,XI));end;elseif not(iI)then else return I(BI,iI,pI);end;end;end;end;if not(At)then else At(Y2,U2);end;return Y2;end;else end;end;else if KN~=0 then it={};else gt=1;end;end;end;end;return Kt(D,rt,Bt)(...);end)("\105\110\115\101\114\116","\46\46","\109\97\116\99\104",nil,pcall,setmetatable,"\98\111\114","\94\46\45\58\37\100\43\58\32",getfenv,bit32,unpack,_ENV,113,116,rawget,bit,select,"\76\117\114\97\112\104\32\83\99\114\105\112\116\58",4294967296,"\103\115\117\98","\40\105\110\116\101\114\110\97\108\41","\99\104\97\114","\115\117\98","\98\120\111\114",256,table,true,"\118",false,"\98\110\111\116","\96\102\111\114\96\32\105\110\105\116\105\97\108\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",tonumber,string.reperror,"\108\115\104\105\102\116",133758,"\114\115\104\105\102\116",assert,rawset,coroutine.yield,string,tostring,"\115\116\114\105\110\103",setfenv,"\96\102\111\114\96\32\108\105\109\105\116\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114","",string.byte,type,"\98\97\110\100",102,next,"\97\116\116\101\109\112\116\32\116\111\32\121\105\101\108\100\32\97\99\114\111\115\115\32\109\101\116\97\109\101\116\104\111\100\47\67\37\45\99\97\108\108\32\98\111\117\110\100\97\114\121","\35","\96\102\111\114\96\32\115\116\101\112\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",table.unpack,...);
